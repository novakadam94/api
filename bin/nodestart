#!/usr/bin/env python

# Copyright (C) 2015 MTA SZTAKI

"""
This script starts a single node using OCCO-CloudHandler and
OCCO-InfraProcessor.

Author: adam.visegradi@sztaki.mta.hu
"""

import occo.api.occoapp as occoapp
import yaml

def setup_args(cfg):
    cfg.add_argument('node_def', type=occoapp.yaml_file)

if __name__ == '__main__':

    occoapp.setup(setup_args)

    import logging
    log = logging.getLogger('occo')

    node_definition = occoapp.args.node_def

    log.debug('Configuration:\n%r', occoapp.configuration)
    log.info('Node definition:\n%r', node_definition)

    from occo.infraprocessor import InfraProcessor
    ip = InfraProcessor.instantiate(
        protocol='basic',
        user_data_store=occoapp.uds,
        cloudhandler=occoapp.cloudhandler,
        servicecomposer=occoapp.servicecomposer)
    create_node_command = ip.cri_create_node(node_definition)
    log.debug('CreateNode:\n%s',
              yaml.dump(create_node_command, default_flow_style=False))

    retval = ip.push_instructions(create_node_command)
    log.info('%r', retval)
    # Final result: instance_data
    print yaml.dump(retval[0], default_flow_style=False)
